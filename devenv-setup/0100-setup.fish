#!/bin/fish

function devenv_col
    set_color blue
    printf "[devenv] " 
    set_color $argv[1]
    printf "$argv[2..]\n"
    set_color normal
end

function devenv_normal
    devenv_col green $argv
end

function devenv_info
    devenv_col 606060 $argv # gray
end

function devenv_severe
    devenv_col red $argv
end


# If setup.cmd has set these environment variabnles, we use them, otherwise we
# set them to a default value. Either way, we need to convert them to unix paths.
function devenv_inherit_path_or_default --argument-names env_name default_value
    test -n "$$env_name"; or set $env_name "$default_value"
    set -g $env_name (cygpath -u "$$env_name")
end

devenv_inherit_path_or_default DEVENV_SETUP_ROOT (dirname (status --current-filename))
devenv_inherit_path_or_default DEVENV_DOWNLOADS "$DEVENV_SETUP_ROOT/downloads"
devenv_inherit_path_or_default DEVENV_ROOT "$DEVENV_SETUP_ROOT/.."
devenv_inherit_path_or_default DEVENV_INIT_ROOT "$DEVENV_ROOT/devenv-init"

function devenv_locate_vcvarsall
    find (cygpath -u "$PROGRAMFILES\\Microsoft Visual Studio") -name vcvarsall.bat | sort -r
end

devenv_normal "Tools."

printf "@REM This file is generated by devenv-setup and may be overwritten.\n" > ../devenv-init/0100-compilers.cmd
printf "@%%DEVENV_ECHO_NORMAL%% Setting up compilers...\n" >> ../devenv-init/0100-compilers.cmd

# must escape % for printf
devenv_info "For now we assume a msvc installation under %%PROGRAMFILES%%\\Microsoft Visual Studio."
devenv_info "Locating `vcvarsall.bat`..."

set DEVENV_VCVARSALL_NIX (devenv_locate_vcvarsall $PROGRAMFILES)

devenv_info "Found the following versions:"
for VCVARS_VERSION in $DEVENV_VCVARSALL_NIX 
    devenv_info "  %s" $VCVARS_VERSION
end

devenv_normal "Using %s" "$DEVENV_VCVARSALL_NIX[1]"
printf "@CALL \"%s\" amd64\n" (cygpath -w "$DEVENV_VCVARSALL_NIX[1]") > ../devenv-init/0100-compilers.cmd
printf "@cl 2>&1 | head -n1\n\n" >> ../devenv-init/0100-compilers.cmd

function 